# transformer_template.yaml

## Where the samples will be written
save_data: ./runs/runs_f_groups/h_nmr/data

## Where the vocab will be written
src_vocab: ./runs/runs_f_groups/h_nmr/data/vocab/vocab.src
tgt_vocab: ./runs/runs_f_groups/h_nmr/data/vocab/vocab.tgt 

overwrite: True

# Corpus opts:
data:
    corpus_1:
        path_src: ./runs/runs_f_groups/h_nmr/data/src-train.txt 
        path_tgt: ./runs/runs_f_groups/h_nmr/data/tgt-train.txt 
    valid:
        path_src: ./runs/runs_f_groups/h_nmr/data/src-val.txt
        path_tgt: ./runs/runs_f_groups/h_nmr/data/tgt-val.txt

# Train on a single GPU
world_size: 1
# gpu_ranks:
# - 0


# Tensorboard
tensorboard: True
tensorboard_log_dir: ./runs/runs_f_groups/h_nmr/logs

# Where to save the checkpoints
save_model: ./runs/runs_f_groups/h_nmr/model 
save_checkpoint_steps: 10000

# Model parameters
keep_checkpoint: 10
seed: 3435
train_steps: 150000
valid_steps: 10000
warmup_steps: 8000
report_every: 100

decoder_type: transformer
encoder_type: transformer
word_vec_size: 512
hidden_size: 512
layers: 4
transformer_ff: 2048
heads: 8

accum_count: 8 
optim: adam
adam_beta1: 0.9
adam_beta2: 0.998
decay_method: noam
learning_rate: 2.0
max_grad_norm: 0.0

batch_size: 4096
batch_type: tokens
normalization: tokens
dropout: 0.1
label_smoothing: 0.1

param_init: 0.0
param_init_glorot: 'true'
position_encoding: 'true'